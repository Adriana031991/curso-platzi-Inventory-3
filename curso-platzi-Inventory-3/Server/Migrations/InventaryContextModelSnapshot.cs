// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using curso_platzi_Inventory_3.Server.DataAccess;

#nullable disable

namespace cursoplatziInventory3.Server.Migrations
{
    [DbContext(typeof(InventaryContext))]
    partial class InventaryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.CategoryEntity", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = "ASH",
                            CategoryName = "Aseo Hogar"
                        },
                        new
                        {
                            CategoryId = "ASP",
                            CategoryName = "Aseo Personal"
                        },
                        new
                        {
                            CategoryId = "HGR",
                            CategoryName = "Hogar"
                        },
                        new
                        {
                            CategoryId = "PRF",
                            CategoryName = "Perfumería"
                        },
                        new
                        {
                            CategoryId = "SLD",
                            CategoryName = "Salud"
                        },
                        new
                        {
                            CategoryId = "VDJ",
                            CategoryName = "Video Juegos"
                        });
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.InputOutputEntity", b =>
                {
                    b.Property<string>("InOutId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InOutDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInput")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StorageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InOutId");

                    b.HasIndex("StorageId");

                    b.ToTable("InOut", (string)null);

                    b.HasData(
                        new
                        {
                            InOutId = "IO-1",
                            InOutDate = new DateTime(2023, 2, 21, 12, 5, 42, 146, DateTimeKind.Local).AddTicks(2480),
                            IsInput = true,
                            Quantity = 1,
                            StorageId = "S-1"
                        },
                        new
                        {
                            InOutId = "IO-2",
                            InOutDate = new DateTime(2023, 2, 21, 12, 5, 42, 146, DateTimeKind.Local).AddTicks(2483),
                            IsInput = false,
                            Quantity = 2,
                            StorageId = "S-2"
                        });
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.ProductEntity", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = "ASJ-98745",
                            CategoryId = "PRF",
                            ProductDescription = "",
                            ProductName = "Crema para manos marca Tersa",
                            TotalQuantity = 0
                        },
                        new
                        {
                            ProductId = "RPT-5465879",
                            CategoryId = "SLD",
                            ProductDescription = "",
                            ProductName = "Pastillas para la garganta LESUS",
                            TotalQuantity = 0
                        });
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.StorageEntity", b =>
                {
                    b.Property<string>("StorageId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartialQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WarehouseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StorageId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Storage", (string)null);

                    b.HasData(
                        new
                        {
                            StorageId = "S-1",
                            LastUpdate = new DateTime(2023, 2, 21, 12, 5, 42, 146, DateTimeKind.Local).AddTicks(2448),
                            PartialQuantity = 1,
                            ProductId = "ASJ-98745",
                            WarehouseId = "WH-1"
                        },
                        new
                        {
                            StorageId = "S-2",
                            LastUpdate = new DateTime(2023, 2, 21, 12, 5, 42, 146, DateTimeKind.Local).AddTicks(2467),
                            PartialQuantity = 1,
                            ProductId = "RPT-5465879",
                            WarehouseId = "WH-2"
                        });
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.WarehouseEntity", b =>
                {
                    b.Property<string>("WarehouseId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WarehouseAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouse", (string)null);

                    b.HasData(
                        new
                        {
                            WarehouseId = "WH-1",
                            WarehouseAddress = "Calle 8 con 23",
                            WarehouseName = "Bodega Central"
                        },
                        new
                        {
                            WarehouseId = "WH-2",
                            WarehouseAddress = "Calle norte con occidente",
                            WarehouseName = "Bodega Norte"
                        });
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.InputOutputEntity", b =>
                {
                    b.HasOne("curso_platzi_Inventory_3.Shared.Entities.StorageEntity", "Storage")
                        .WithMany("InputOutputs")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.ProductEntity", b =>
                {
                    b.HasOne("curso_platzi_Inventory_3.Shared.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.StorageEntity", b =>
                {
                    b.HasOne("curso_platzi_Inventory_3.Shared.Entities.ProductEntity", "Product")
                        .WithMany("Storages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("curso_platzi_Inventory_3.Shared.Entities.WarehouseEntity", "Warehouse")
                        .WithMany("Storages")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.ProductEntity", b =>
                {
                    b.Navigation("Storages");
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.StorageEntity", b =>
                {
                    b.Navigation("InputOutputs");
                });

            modelBuilder.Entity("curso_platzi_Inventory_3.Shared.Entities.WarehouseEntity", b =>
                {
                    b.Navigation("Storages");
                });
#pragma warning restore 612, 618
        }
    }
}
