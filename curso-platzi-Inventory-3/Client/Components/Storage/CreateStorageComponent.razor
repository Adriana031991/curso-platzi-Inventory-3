@using curso_platzi_Inventory_3.Shared.Entities
@*@using curso_platzi_Inventory.Shared.Bussiness*@


<EditForm Model="oStorage">

	<div class="form-group">
		<label>Bodega:</label>
		<InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
			<option>Seleccione una bodega...</option>
			@foreach (var warehouse in warehouses)
			{
				<option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>
			}
		</InputSelect>
	</div>

	<div class="form-group">
		<label>Producto:</label>
		<InputSelect @bind-Value="oStorage.ProductId" class="form-control">
			<option>Seleccione una bodega...</option>
			@foreach (var product in products)
			{
				<option value="@product.ProductId">@product.ProductName</option>
			}
		</InputSelect>
	</div>

	<div>
		<input type="button" value="Almacenar producto" @onclick="SaveStorage" />
	</div>
</EditForm>

<div class="text-center h4">
	@message
</div>

@code {
	StorageEntity oStorage = new StorageEntity();

	IEnumerable<WarehouseEntity> warehouses = new List<WarehouseEntity>();
	IEnumerable<ProductEntity> products = new List<ProductEntity>();

	string message;
	protected override async Task OnInitializedAsync()
	{
		//warehouses = B_Warehouse.WherehouseList();
		//products = B_Product.ProductList();
	}

	private void SaveStorage()
	{
		//oStorage.StorageId = $"{oStorage.WarehouseId} -{oStorage.ProductId}";
		//if (B_Storage.IsProductInWarehouse(oStorage.StorageId))
		//{
		//	oStorage.LastUpdate = DateTime.Now;
		//	B_Storage.CreateStorage(oStorage);
		//	message = "producto registrado";
		//}
		//else
		//{

		//	message = "producto existente";
		//}
	}
}
